// SPDX-FileCopyrightText: 2022 Cem Ge√ßgel <gecgelcem@outlook.com>
// SPDX-License-Identifier: GPL-3.0-or-later

// Token File Rules:
// * Comments using //.
// * Every line has single pattern definition. Pattern definitions can span
// multiple lines but a continuation line should not have a new pattern
// definition in the end.
// * Template patterns using <>.
// * A set of pattern names at the end that gives the order of the tokens. Some
// of the patterns that are not supposed to be tokens can be skiped here. The
// tokenizer will try to match from the first pattern in the set and will try
// the next one if the maching fails. If all patterns in the set do not match
// the lexer aborts with an error.
// * Do not define a pattern with name eof, it is the end of file token that is
// added by the lexer to the end of the token list.

// Integers and floats.
n
    //  Number optionally separated for readability.
    s<d> (d) {'_' (d)}

    //  Whole number.
    i<d> ['+' | '-'] s<d>

    //  Floating point number.
    f<d, e> ['+' | '-'] s<d> '.' s<d> [e i<'0~9'>]

    //  Floating point base 2 exponent character.
    p 'p' | 'P'

    //  Indicator for numbers with different base than 10.
    z<b> '0' b

    //  Base 2 numbers.
    b
        b 'b' | 'B'
        d '0~1'
        @i z<b> i<d>
        @f z<b> f<d, p>

    //  Base 8 numbers.
    o
        b 'o' | 'O'
        d '0~7'
        @i z<b> i<d>
        @f z<b> f<d, p>

    //  Base 10 numbers.
    d
        d '0~9'
        e 'e' | 'E'
        @i i<d>
        @f f<d, e>

    //  Base 16 numbers.
    x
        b 'x' | 'X'
        d '0~9' | 'A~F' | 'a~f'
        @i z<b> i<d>
        @f z<b> f<d, p>
